name: Deploy Frontend to Server

on:
  push:
    branches:
      - main
      - feature/websocket-updates
  workflow_dispatch:

env:
  SERVER_HOST: thakii-02.fds-1.com
  SERVER_USER: ec2-user
  WEB_ROOT: /var/www/thakii-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build frontend
        env:
          VITE_API_BASE_URL: https://thakii-02.fanusdigital.site/thakii-be
          VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
          VITE_FIREBASE_AUTH_DOMAIN: ${{ secrets.VITE_FIREBASE_AUTH_DOMAIN }}
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
          VITE_FIREBASE_STORAGE_BUCKET: ${{ secrets.VITE_FIREBASE_STORAGE_BUCKET }}
          VITE_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.VITE_FIREBASE_MESSAGING_SENDER_ID }}
          VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}
        run: npm run build
      
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass
      
      - name: Create deployment archive
        run: |
          cd dist
          tar -czf ../frontend-build.tar.gz .
          cd ..
      
      - name: Upload build artifact
        run: |
          # Upload build artifact to GitHub (will be downloaded by webhook)
          echo "Build artifact created: frontend-build.tar.gz"
          ls -la frontend-build.tar.gz
      
      - name: Deploy via webhook
        env:
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
        run: |
          # Deploy frontend via webhook
          echo "=== Deploying Frontend via Webhook ==="
          
          # For now, we'll use a simple approach without file upload
          # The webhook will pull from git directly
          RESPONSE=$(curl -s -w "%{http_code}" -X POST \
            -H "Authorization: Bearer $WEBHOOK_SECRET" \
            -H "Content-Type: application/json" \
            -d '{"build_url": "git"}' \
            https://thakii-02.fanusdigital.site/webhook/deploy/frontend)
          
          HTTP_CODE="${RESPONSE: -3}"
          BODY="${RESPONSE%???}"
          
          echo "HTTP Status: $HTTP_CODE"
          echo "Response: $BODY"
          
          if [ "$HTTP_CODE" = "200" ]; then
            echo "✅ Frontend deployment successful"
          else
            echo "❌ Frontend deployment failed"
            exit 1
          fi
      
      - name: Verify deployment
        env:
          SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
        run: |
          # Wait for deployment to settle
          sleep 5
          
          # Check if site is accessible
          HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" https://thakii-02.fanusdigital.site/)
          
          if [ "$HTTP_CODE" -eq 200 ]; then
            echo "✅ Frontend is accessible (HTTP $HTTP_CODE)"
          else
            echo "⚠️  Frontend returned HTTP $HTTP_CODE (might still be loading)"
          fi
      
      - name: Notify deployment status
        if: always()
        run: |
          if [ $? -eq 0 ]; then
            echo "✅ Deployment successful"
          else
            echo "❌ Deployment failed"
          fi

